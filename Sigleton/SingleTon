싱글톤(Singleton) 패턴
정의: 클래스의 인스턴스를 오직 하나만 생성하여 애플리케이션 전역에서 공유하는 패턴입니다.

장점:

인스턴스 생성 비용 감소

전역 상태 공유로 일관된 자원 사용 가능

단점:

객체 간 의존성이 높아져 테스트와 유지보수가 어려움

특히 **TDD(Test-Driven Development)**에서 단위 테스트(Unit Test) 시 독립성이 떨어짐

단점 보완 - 의존성 주입(Dependency Injection)
해결책: 싱글톤 객체를 직접 생성하지 않고, 외부에서 주입받는 방식(DI)을 사용

장점:

테스트 시 Mock 객체로 대체 가능해 유연한 테스트 환경 구성 가능

단점:

클래스 수 증가로 인해 코드의 복잡성이 올라갈 수 있음

객체 주입을 위한 런타임 오버헤드 발생 가능성

대표적인 싱글톤 사용 예
데이터베이스 연결 모듈, 설정(Config) 관리 객체, 로그(Log) 시스템 등

